name: build

on:
  workflow_dispatch:
    inputs:
      yt_dlp_ref:
        required: true
        type: string
      python_ver:
        required: true
        default: 3.12.11
        type: string
      pyi_rebuild:
        required: false
        default: true
        type: boolean
      pyi_build_owner:
        required: true
        default: 3dyd
        type: string
      pyi_build_repo:
        required: true
        default: pyinstaller-builds
        type: string
      pyi_ver:
        required: true
        default: 6.15.0
        type: string

jobs:
  prepare:
    name: build pyinstaller
    runs-on: ubuntu-latest

    steps:
      - name: Rebuild custom PyInstaller
        if: inputs.pyi_rebuild
        uses: convictional/trigger-workflow-and-wait@v1.6.1
        with:
          owner: ${{ inputs.pyi_build_owner }}
          repo: ${{ inputs.pyi_build_repo }}
          github_token: ${{ secrets.PAT }}
          workflow_file_name: build-package.yml
          ref: master
          wait_workflow: true
          client_payload: '{"ref":"v${{ inputs.pyi_ver }}"}'

  build:
    name: build
    needs: prepare
    runs-on: windows-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout yt-dlp
        uses: actions/checkout@v4
        with:
          repository: yt-dlp/yt-dlp
          path: yt-dlp
          ref: ${{ inputs.yt_dlp_ref }}

      - name: Show Environment
        run: env

      - name: Setup Python
        run: |
          set -xeu
          env
          curl -L https://github.com/3dyd/cpython/releases/download/v${PYTHON_VER}-vista/python-${PYTHON_VER}-pip+venv-win32-VISTA.zip -o python.zip
          unzip -q python.zip -d python
          python/python.exe -m venv venv
        env:
          PYTHON_VER: ${{ inputs.python_ver }}

      - name: Install Dependencies
        run: |
          set -xeu
          source venv/Scripts/activate
          python yt-dlp/devscripts/install_deps.py -o --include build
          python -m pip install https://${PYI_BUILD_OWNER}.github.io/${PYI_BUILD_REPO}/pyinstaller-${PYI_VER}-py3-none-any.whl
        env:
          PYI_BUILD_OWNER: ${{ inputs.pyi_build_owner }}
          PYI_BUILD_REPO: ${{ inputs.pyi_build_repo }}
          PYI_VER: ${{ inputs.pyi_ver }}

      - name: Build EXE
        run: |
          set -xeu
          source venv/Scripts/activate
          cd yt-dlp
          python devscripts/make_lazy_extractors.py

          # Disallow --update otherwise it will be replaced with the official Win8+ binary
          sed -ri "s/VARIANT.+/VARIANT = 'other'/" yt_dlp/version.py

          python -m bundle.pyinstaller

      - name: Release EXE
        run: |
          set -xeu
          if gh release view "$YT_DLP_REF" &> /dev/null; then
            gh release delete --cleanup-tag --yes "$YT_DLP_REF"
            sleep 10
          fi
          NOTES="Read changelog on the official release page: https://github.com/yt-dlp/yt-dlp/releases/tag/$YT_DLP_REF"
          gh release create "$YT_DLP_REF" --target master --title "yt-dlp $YT_DLP_REF" --notes "$NOTES" yt-dlp/dist/yt-dlp_x86.exe
        env:
          GH_TOKEN: ${{ secrets.PAT }}
          YT_DLP_REF: ${{ inputs.yt_dlp_ref }}
